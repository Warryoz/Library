@model models.ViewModels.UsuarioViewModel

@{
    ViewBag.Title = "Crear usuario";
}

<h3>Crear nuevo usuario</h3>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form row">
    <div class="col-md-6 form-group">
        <div class="col-md-4">Nombres</div>
        <div class="col-md-8">
            @Html.EditorFor(model=> model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6 form-group">
        <div class="col-md-4"> Apellidos </div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6 form-group">
        <div class="col-md-4">Correo Electrónico</div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6 form-group">
        <div class="col-md-4">Fecha nacimiento</div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6 form-group">
        <div class="col-md-4">Tipo identificación</div>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.IdTipoIdentificacion,ViewBag.TipoIdentificacionList as SelectList, "Seleccione un tipo de identificación",  new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdTipoIdentificacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6 form-group">
        <div class="col-md-4">Número de identificación</div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.NumeroIdentificacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumeroIdentificacion, "", new { @class = "text-danger" })
        </div>
    </div>




    <div class="col-md-6 form-group">
        <div class="col-md-4">Dirección</div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6 form-group">
        <div class="col-md-4">Teléfono</div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6 form-group">
        <div class="col-md-4">País de origen</div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.PaisOrigen, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PaisOrigen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-12">
        <div class="col-md-8">
            <input type="submit" value="Crear usuario" class="btn btn-success" />
            @Html.ActionLink("Volver", "List", null, new { @class = "btn btn-danger" })
        </div>
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
